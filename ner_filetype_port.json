[{"content":"Spam messages by Zeus might contain a neutral text that looks as though it was sent from an acquaintance, such as “Hi! How was the weekend trip? I have some news for you! Check this out, you won’t believe it: http://rss.lenta-news.ru/subj/vesti.exe”. These Zeus emails contained a ZIP archive that contained a JavaScript file.The Zeus virus can make its way to your computer through spam emails or compromised websites.Emails often appear to be sent from legitimate sources — Starbucks inviting you to a special event, Facebook or LinkedIn asking you to log in to accept a friend request, or your bank claiming someone has made a payment in your name, and inviting you to download an executable file to cancel it.Many of them next downloaded a Windows PE executable file (which will be detected by Talos Certified SID 11192); typically, these binaries are updates to the Zeus client software, to ensure that the newly infected host is up-to-date in its capabilities.However, we also encountered cases when the Terdot.A/Zloader was dropped by the malicious email attachment.The format the file takes is a series of blocks that enable and customise the various functionalities that Zbot offers. One of the “standard” behaviors of the ZeuS/ZBOT Trojans is that it downloads a configuration file. A recently spotted spam campaign was using Message file attachments (.MSG) to infect users with the infamous Zbot banking Trojan, Trustwave security researchers say.The spam run contained alleged Tax Notification emails coming from Canada Revenue Agency, which had the aforementioned MSG file attached.What Trustwave researchers focused on was the extraction of the malicious Zeus object from the .MSG file without using Outlook, and they started by confirming that the file was an OLE (Object Linking and Embedding) compound file – used for storing MS Office documents. When run, the JavaScript would download a malicious executable from the domain “tradestlo[.]top,” which researchers say was a Trojan downloader called Terdot. Computers infected with this version of ZeuS will have the following files and folders installed. The location depends on whether the victim has Administrator rights. The files will most likely have the HIDDEN attribute set to hide them from casual inspection.The Zeus variants in the campaign we're about to describe also appear to be using Zeus droppers that employ the hidden Windows 'PIF' file extension - a file extension that used to be popular many years back, that was often associated with viruses then, and that appears to be making a comeback.In this case, the bot can update itself by downloading an executable file using SSL, which will defeat any sandbox that doesn't employ SSL inspection. For example: hxxps://invoice-maker.ru/flash/flashplayer.exe.The attack tried to entice victims to open a ZIP attachment containing the Upatre downloader on their computer, which would later infect the users with Zeus GameOver.This campaign combines an HTML or ZIP attachment with a social engineering technique, similar to what we normally see in malicious email campaigns. Opening the attachment results in a compromised user machine via an obfuscated JavaScript in the attached HTML file.The Zeus Panda sample used automated transfer scripts (ATS) to inject code into banking websites. ATS are essentially javascript files which are hosted on a third party website, and contain code which will change the content of a banking website. This new variant uses a malicious PDF file which contains the threat as an embedded file. When recipients open the PDF, it asks to save a PDF file called Royal_Mail_Delivery_Notice.pdf. Zeus creates a subdirectory under %SYSTEM32% with the name \"lowsec\" and drops the \"local.ds\" and \"user.ds\" files. The messages carried a zip attachment containing an executable that is a variant of the Trojan.Zbot.The Zeus e-mails contain an MSG attachment with an embedded OLE object. This is not a technique we see very often and is challenging for security products to detect due to the complicated MSG format.Some variants of Zbot download a configuration file from a remote server that determines how the trojan will behave. The trojan can generate up to 1020 pseudo-randomly named domains, and tries to connect with the generated list to download a configuration file. The generated domain names are based on the system date and time and have one of these suffixes: biz, com, info, net, org, ru.The latest Gameover variant is being distributed through spam emails purporting to come from HSBC France with fake invoices in .zip attachments.At the beginning of February, researchers from security firm Malcovery Security, reported that a new variant of Zeus Gameover was being distributed as an encrypted .enc file in order to bypass network-level defenses. As Zeus is primarily email based, it would be prudent to block email attachments containing executable files or ZIP files with file extensions like EXE or SCR or ZIP (but not limited to these).Like similar malware campaigns, Terdot attacks begin with phishing emails. These messages are rigged with a button designed to look like a PDF file, which when clicked will actually execute Javascript code to download the malware file.Once the initial component of Zloader runs, it deploys Windows Explorer (explorer.exe) and injects shellcode along with a new Portable Executable (PE) file containing payload.dll.The trojan Zeus is sending out email on port 25 from the workstation that's infected.This anomality was detected by a TCP/IP connection from  on port 1992 going to an the sinkhole on port 80, which was by ZbotFor POP3 data (port 110), the hook procedure records the user names and passwords of USER and PASS commands, and also examines buffers that are at least 12 characters in length for an initial AUTH PLAIN command. For HTTP data (port 80), the hook procedure searches the entire sent buffer for the string \\r\\nAuthorization: Basic and, if found, extracts the data that follows, stopping at the next \\r\\n sequence or at the end of the buffer and then submitting the base-64-decoded data to the zbot server.The Zeus malware tells the browser to run traffic through TCP port 9050 and the stolen data will eventually land in an onion domain.An example behavioral pattern that we can analyze are all the flows sent by the zbot to the destination port 8033 using the UDP protocol. We also noted that the zbot started a server listening on ports 1548 and 3492. When the malware successfully contacts a live C2 server, the Zeus malware sends RSA-encrypted data using a request on TCP port 80 (see Figure 2).After terdot sent queries, it is followed by connections to that host via TCP port 443 The Tor utility maintained by Zeus under the cover of the svchost.exe process creates an HTTP proxy server listening to the TCP port 9050.They reach your machine where tor.exe maintained by Zeus accepts a connection on port 80 and redirects it to port 1080 on the local machine which is listened to by the web server.Zeus was listening on TCP port 9050 that is the Tor port, there were some active network Tor connections and Opera was causing a massive flooding of TCP connections.Zeus uses port 80(HTTP) for all its communication between the victim's system and the C2 server.In order to view the contents, the web browser (in this case, Firefox) connects to localhost on port 2222 (entry 2 and 3). The connection is received by the explorer.exe process (because it is where ZeuS injected its worker threads).Zeus listens on TCP port 80 for incoming connections and simply relays data receives to another server that hosts the actual phishing pages and malware files.Our machine infected by Zeus was making connections with an ipv4 by the 80/tcp port. One behavior that is common among all infected machines that have completed this first step successfully, however, is a pair of HTTP POST requests, sent the same server that the config file was fetched from (the file name being POSTed to is identical between the requests).Within milliseconds of the infection, the host will send out an HTTP GET request, which results in the controlling server sending down a binary blob of data marked with a Content-Type of application/octet-stream.The HTTP headers remain identical to those of the original config file request, plus a standard Content-Length header to specify the size of the data being sent.After monitoring and stealing data, the Zeus PIF variants communicate with C&C servers using HTTPS in order to transfer stolen data. ZeuS performs stolen data exfiltration and remote commands via encrypted HTTP POST requests to a Command and Control web server. Several of these tasks can be done \"on-demand\" via the HTTP-based control panel, and directed to selected computers infected by the zbot Upon decryption of the Zeus configuration files used in this campaign, it's evident that the zbot communicates and 'calls home' to its command and control servers using HTTPS. We observe that explorer.exe (Terdot malware)is communicating with an external server over HTTP.Terdot keeps logs of relevant data in HTTP requests and uploads them periodically to the C&C servers.The malware reads the HTTP request sent by the hijacked client. It does this in a loop, reading up to 65535 bytes from the socket, then feeding these bytes into a finite automaton responsible for parsing the HTTP headers and separating the content. It uses two ways to Steal the data.one is by inspecting the client request or injecting the javascript spyware code, the second one is collecting logs from relevant data in HTTP requests and uploads them periodically to the C&C servers.The Zeus bot hooks HttpSendRequestA and HttpSendRequestW to intercept content-bearing HTTP requests (usually POST requests) made by Internet Explorer-based browsers. If the request is a HTTP GET request, the Zeus bot searches it for a \\r\\nAuthorization: Basic string and, if found, submits the entire request plus the base64-decoded credentials to the bot server. Assuming the position of the Zeus bot herder now, I am able to see that I have a new bot connected to my Command & Control server. We can see this in the interface, as well as based on the POST requests to gate.phpIn cases where the DNS name of the control server was not found, the zbot would send multiple requests for the name in question to all of its DNS servers, often in rapid succession.The GameOver variant also opens a random UDP port and sends encrypted packets before sending DNS queries to randomized domain names.Gameover is rapidly requested DNS for the active IP address of CNC by using this DGA, \"WITH OR WITHOUT internet connection\".Below is an example of the query spike seen for one such Gameover Zeus domain (xsz2ci17qx2793ylfyn8rrc1v[.]biz).Terdot sent DNS queries for chinaandkoreacriminalaffairs.kz. Like many malware families today, Zeus and Cryptolocker utilize various Domain Generation Algorithms (DGA) to reach out to their command and control servers via DNS to establish contact and receive instructions. This activity is indicative of malware activity on a host. In this case the MALWARE-CNC Win.Trojan.Zeus v3 DGA DNS query detected was detected.The Zeus botnet herder get his C&C traffic past these control systems by querying a DNS server for TEXT records, reassembling the encoded messages, and providing a fast, reliable communication method that hardly any organization is blocking.Zeus Trojan often generates DNS queries to attempt to find the command and control using DNS fast flux.It shows how infected hosts in many countries began contacting our sinkhole webservers once the malicious domains in the .biz, .com, .info, .net, and .org TLDs were seized by law enforcement and pointed at the sinkhole (flags show the IP-geolocation of the infected host, their title is the malicious DNS domain they were attempting to contact, while the tree branches are based on country code, then ASN, then color coded IP octets)After the new folders and files have been created, Zbot opens the registry key HKEY_CURRENT_USER\\Software\\Microsoft using the RegCreateKeyExW API. Then it creates a new subkey using the RegCreateKeyExW API, e.g. ‘HKEY_CURRENT_USER\\Software\\Microsoft\\Gafamu’.Three more subkeys are generated under ‘HKEY_CURRENT_USER\\Software\\Microsoft\\Gafamu’ with random names, e.g. ‘Empyutso’, ‘Laukerr’ and ‘Sida’.The previously received socket data has already been written to registry key 2f0e9h99. Once the update is completed the registry data is (once again) alphanumerically encoded and written back to the 2f0e9h99 registry key. All the registry keys used by Zeus Panda are located in the HKCU\\Software\\Microsoft key. The .dll files are searched in the directory by Zbot defined in the registry key: HKLM\\SOFTWARE\\Microsoft\\WAB\\DLLPath\\First, as the malware tries to write to the registry “Userinit” entry in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\WinlogonZeus adds the following registry entry: HKEY_CURRENT_USER\\Software\\Microsoft\\WAB\\WAB4\\Wab File Name (Default) = “%User Profile%\\Application Data\\Microsoft\\Address Book\\{user name}.wab”Zeus creates the following registry entry to ensure persistence upon system reboot: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ Epoxs = \"%Local Settings%\\Temp\\Eqxav\\epoxs.exe\"The base registry key is the name of a registry key created by the malware under HKCU\\Software\\Microsoft. It is used as a base key for all data stored in the registry.Our observations of the family of malware show that some samples first check if they have the necessary privilege to edit the Registry key over at HKCU\\Software\\Microsoft\\Test by trying to create this key first.Next, the Zeus malware creates a run key in the Registry under HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ with the path to the DLL set under %APPDATA% as a persistence method using Rundll32.exe and DllRegisterServer as an argument.The Zeus malware also creates two Registry hives under HKCU\\Software\\Microsoft\\, each one containing one key that holds a part of its configuration.There are several Zeus variants that operate in a similar way, writing resources to the %APPDATA% folder and writing Registry key to HKCU\\Software\\Microsoft.The Sphinx variant we looked at creates two Registry hives under HKCU\\Software\\Microsoft\\, each containing one key that holds a part of its configuration.Additionally, Zeus virus adds registry keys that allow it starts on every Windows boot-up. The modifications again depend on the account privileges. If the account has administrative privileges, Zeus uses the subkey: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\When the account has limited privileges, Zeus uses the subkey: HKEY_CURRENT_USER\\ SOFTWARE \\Microsoft\\Windows\\CurrentVersion\\Run\\It is common that a trojan adds a registry key to be sure that it will be running every time the computer is restarted. Take a look at the Winlongon register key: python vol.py -f zeus.vmem printkey -K \"Microsoft\\Windows NT\\CurrentVersion\\Winlogon\"The Zeus malware appends the path C:/Windows/System32/sdra64.exe to HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/WindowsNT/CurrentVersion/Winlogon/Userinit registry key.This shows that the malware code snippet will be injected into any URL that contains “https://www.wellsfargo.com”, where the code will be injected (after the data in“data_before”), and the code itself which is extra fields in the form requesting “ATM PIN” etc.The emails used by Zeus PIF often hold subjects used to lure a target to run a file from a URL and according to the team are of good quality; containing no spelling mistakes and convincing imagery. The email does not contain attachments, but rather a URL link to a .ZIP file which contains the Zeus dropper and the executable PIF file.The URLs used in the messages that lead to Zeus Droppers appear to be of two kinds; some are URLs that were registered only for a few days, and some utilize compromised websites.The target URL containing the encrypted binary is categorized as MWS, therefore stopping the infection before Zeus GameOver even gets to the victim's computer: hxxp://footballmerch.com/media/css/Targ-2105USmw.tarIf execution is allowed then the JScript file will begin to download and execute Zeus malware from the following URL: hxxp://tradestlo.top/poll.hlsThe lure emails typically hold subjects that are aimed to entice the target to download and run a file from a URL. The email messages don't contain file attachments, but rather a URL link to a ZIP file that contains a PIF file that is the Trojan Zeus Dropper. PIF is another executable extension (like .exe, etc.) and it operates like other executable files.If execution is allowed then the JScript file will begin to download and execute malware from the following URL: hxxp://tradestlo.top/poll.hlsThe binary attached with both campaigns was a Citadel variant SHA1: 4b422b48be4beaa44557c452f0920aa1ee0b16cb We compared it with the Zeus variant it downloaded (SHA1 e57362eaa240da948980c4c6133d63c2a4c07b31).It corresponds to a binary with the MD5 46b3df3eaf1312f80788abd43343a9d2 of and that was classified by Kaspersky in VirusTotal as Trojan-Spy.Win32.Zbot.oowo. The above mentioned Zbot variant was responsible for dropping the following malicious files: 6ca1690720b3726bc76ef0e7310c9ee7 - Win32/Stoberox.B (VT 26 / 50) and d2c6a0e888d66882d7dc29667c4c9ec0 - TrojanDownloader:Win32/Cutwail (VT 38/50)Opening the attached ZIP archive reveals a malicious file named \"E-statement.pdf.scr\" (MD5: 5e5e46145409fb4a5c8a004217eef836) that displays a familiar Adobe Reader PDF icon. The hash involved in this GameOver attack is: 591567291435e4e1394aac27a0c4bbb1d5bdd47e.Based on the string \"2012-06-11 02:05:22 f5b5a13f7394dc143aa136f1d4faba6839eaa6dc\" in the module, CTU researchers determined that the version of SQLite used by Zeus Citadel is 3.7.13.Sample MD5 hashes for the Panda Trojan are: e9dd9705409df3739183fb16583686dd.File hashes used by Zeus Panda include 541a13676ca56ca69459326de5701e9c.A sample MD5 hash for the Zeus Sphinx Trojan is 03915A1F03DF164F48AC4DFD04D9C2C4. This malware description was published using automated analysis of file SHA1 1c1988e181c541a79b486153465f29d7b2e27cea.There are two links in the message that lead to the same IP address hosting a PDF file for instructions and an executable that is meant to be the patch to apply. The executable file named adbp932b.exe (SHA1 0632f562c6c89903b56da235af237dc4b72efeb3) has minimal coverage of about 7%.The Zeus Panda sample we analysed (SHA1 ccf17e27c0e5883920bb6abea5bc5d6c2c7a1c37) used automated transfer scripts (ATS) to inject code into banking websites. An example behavioral pattern that we can analyze are all the flows sent by the bot to the IP address 99.72.105.178 using the UDP protocol.One of these UDP connections (to IP 213.219.135.125) was answered (we call them established) and some information was downloaded by the Zbot.Systems infected by GameOver Zeus that connect to one of the sinkholes will also make a connection to the following IP address: 72.52.116.52:4643.Three of the IP addresses have also been identified by OpenDNS Labs over the past week as being malicious, 176.8.154.150, 81.163.142.143, 31.129.65.152A DNS request to non .ru domains was resolved to the IP: 54.83.43.69, the FBI’s sinkhole server, and followed by an HTTP request. The botnet was found trying to make connections to the ip address 31.129.65.152.This was detected by a TCP/IP connection from our external IP going to an IP address 87.255.51.229 (the sinkhole).Behind a NAT, you should be able to find the infected machine by looking for attempted connections to IP address 87.255.51.229 or host name zhpfvokdqttsqcfmknrwdpfyd.info on any port with a network sniffer such as wireshark.Terdot sent queries for ip address 185.82.200.159. Our machine infected by Zeus was making connections with ip address 193.104.47.75.The attacks associated with the new botnet attempted to exploit the CVE-2017-17215 zero-day vulnerability in the Huawei home router caused by the fact that the TR-064 technical report standard, which was designed for local network configuration, was exposed to WAN through port 37215 (UPnP – Universal Plug and Play).About 12 hours ago (2017-12-05 11:57 AM GMT+8), we noticed a new version of Satori (a mirai variant which we named Satori), starting to propagate very quickly on port 37215 and 52869.Two new exploits, which work on port 37215 and 52869 have been added, see below for more details.Due to the worm like behavior, we all should be on the lookout for the port 37215 and 52869 scan traffic.For those who don’t have the visibility, feel free to check out our free Scanmon system for port 37215 and 52869, or ISC port pages for 37215 and 52869.As can be seen from the following picture, the bot will scan port 37215 and 52869 randomly, determined by the remainder of a random integer mod 3.During the scanning, Satori will utilize two different exploits, one on port 37215, while the other on 52869.The one on port 37215 is not fully disclosed yet, our team has been tracking this in the last few days and got quite some insight, but we will not discuss it here right now.(stay tuned for our update later).For example, during last recent 12 hours we have seen 263,250 different IPs scanning port 37215, and 19,403 IPs scanning port 52869.The scanner process runs continuously on each mirai BOT using the telnet protocol (on TCP port 23 or 2323) to try and login to IP addresses at random. To infect these devices Mirai chooses random IPs and attempts to use default administrative credentials to take over the device via ports 7547 and 5555 These ports are: port 53413 related to Netis Routers, port 37215 related to Huawei HG532 routers, port 52869 UPnP SOAP service from a Realtek SDK, and port 81 for CCTV-DVR cameras. In the subsequent seven consecutive days, the system received the same attack payload sent from multiple infected IP addresses. The attack targeted TCP port 5555. ADB.Mirai spreads via the ADB port of Android devices, and this sample randomly generates 359 IP addresses and scans port 5555 on these addresses to seek for exploitable targets. ADB.Mirai spreads via the ADB port of Android devices. This sample randomly generates 359 IP addresses and scans port 5555 on these addresses to seek for exploitable targets. Affected routers use protocols that leave port 7547 open, which allows for exploitation of the router. Monitor Internet Protocol (IP) port 2323/TCP and port 23/TCP for attempts to gain unauthorized control over IoT devices using the network terminal (Telnet) protocol by MiraiMirai spread by first entering a quick scanning stage where it proliferates by haphazardly sending TCP SYN probes to pseudo-random IPv4 addresses, on Telnet TCP ports 23 and 2323.So as to strengthen itself, Mirai also terminates different services which are bound to TCP/22 or TCP/23, including other Mirai variations. The destination port numbers of scanning packets are distributed as ∼90% port 23 and ∼10% port 2323 for Mirai.Satori, the new variant of Mirai is different from all previous variants as it does not use a Telnet port scanner instead it will scan TCP ports 37215 and 52869 on random IP addresses. The Satori attack is employed with two new exploits which is targeting TCP ports 37215 and 52869.One of the exploit by Satori works on TCP port 52869 of IoT devices/routers.The bug leaves the router's TCP port 7547 exposed to the internet.ISPs should restrict access to ports 7547 (and 5555) accordingly in order to protect routers from exploits against unpatched vulnerabilities by Mirai.When a router is infected by the new Mirai variant it closes port 7547 and disables telnet as well, making it very difficult for ISPs to apply patches remotely.We see that on September 13, 2016, port 2323 (TCP), an alternate port for Telnet, began showing up in our top five most-scanned ports. Port 23 (TCP), the standard port for Telnet, often shows up in the top five. Both ports are associated with the Mirai botnet, which scans them looking for vulnerable IoT devices.The Mirai code was modified to include exploitation of another vulnerability, TR-06927, and used TCP port 7547.At the end of January 2017 our port metrics still showed significant scans for port 23 (Telnet), and while activity on ports 2323 and 7547 was still occurring, the volume was lower.Mukashi searches open TCP port 23 and uses combinations of default credentials to access other systems. The bot supports various commands, like Mirai, such as launching DDoS attacks.Mukashi binds to the TCP port 23448 in order to ensure only a single instance is running on the infected system.Wicked, a Mirai variant, scans ports 8080, 8443, 80 and 81 by initiating a raw socket SYN connection; if a connection is established, it will attempt to exploit the device and download its payload.Mukashi takes advantage of a vulnerability (CVE-2020-9054) in Zyxel NAS devices running firmware version 5.21 that allows remote attackers to execute code – and according to researchers at Palo Alto Networks, cyber criminals are actively attempting to exploit the attack in the wild.The operators of this new botnet are expanding their internet of things network by taking advantage of a vulnerability identified in February and designated as CVE-2020-9054, which affects Zyxel NAS devices using older instances of the company's firmware up to version 5.21.We also reported on the use of the CVE-2015-2051 and CCTV-DVR RCE exploits by the Gafgyt variant Hakai and the Mirai variant Yowai, respectively, and detailed how both malware variants also used the ThinkPHP RCE exploit.These two Mirai exploits, however, were used in a more recent attack, which also included four others on the list: the CVE-2018-10561, CVE-2014-8361, UPnP SOAP TelnetD command execution, and CVE-2017-17215 exploits.The two Mirai variants, namely SORA and UNSTABLE, gain entry through Rasilient PixelStor5000 video surveillance storage systems by exploiting CVE-2020-6756.The Mirai variants enter the system by abusing a vulnerability (CVE-2020-6756) in the Rasilient video surveillance storage device.The variant exploits CVE-2017-17215 and CVE-2018-10561, resulting in remote code execution (RCE) and unauthorized management of device, respectively.Besides CVE-2017-17215 and CVE-2018-10561, UNSTABLE also abuse the ThinkPHP vulnerability. The new Mirai strain targets CVE-2020-9054, a critical flaw that exists in many VPN firewalls and network attached storage (NAS) devices made by Taiwanese vendor Zyxel Communication Corp., which boasts some 100 million devices deployed worldwide.Specifically, this variant called Echobot nastyware build tries to exploit, in addition to previously targeted vulnerabilities, CVE-2019-2725 in Oracle WebLogic Server and CVE-2018-6961 in VMware NSX SD-WAN to pressgang more machines into its web.Cashdollar found that, beyond the Oracle and VMware exploits, several of the malware's other \"new\" exploits are, in fact, for vulnerabilities that have been around for nearly a decade, but for one reason or another did not get addressed. These include vulnerabilities in well-known brands such as Linksys (CVE-2009-5157) and Ubiquiti (CVE-2010-5330).While most of the Mirai variants target IoT devices, such as home routers and IP cameras, this version of Echobot adds an outstanding exploit for CVE-2019-14927, which targets Mitsubishi Electric‘s Remote Terminal Unit (RTU).At the same time, Echobot added four exploits to its arsenal from 2019, while the latest one is from August 2019, targeting Webmin Linux/Unix administration panel (CVE-2019-15107). Mukashi, a new mirai variant takes advantage of a vulnerability (CVE-2020-9054) in Zyxel NAS devices running firmware version 5.21 that allows remote attackers to execute codeOne of the more unusual bugs includes CVE-2019-17270, a remote code execution flaw in the previously mentioned Yachtcontrol webservers, which allow yacht owners to remotely control the functions of their vessels.In addition to previously targeted vulnerabilities, Echobot also tires to exploit the CVE-2019-2725 vulnerability in Oracle WebLogic Server and the CVE-2018-6961 vulnerability in VMware NSX SD-WAN to add even more machines to its botnet.In terms of exploited vulnerabilities, LiquorBot exploits some critical CVEs (CVE-2015-2051, CVE-2016-1555, CVE-2016-6277) as well as a series of command injection and remote command execution vulnerabilities found in various router models (CVE-2018-17173, CVE-2017-6884, CVE-2018-10562, CVE-2017-6077, CVE-2017-6334, CVE-2016-5679, CVE-2018-9285, CVE-2013-3568, CVE-2019-12780).Mirai variant dubbed Asher propagates itself by exploiting the known vulnerabilities CVE-2018-10561, CVE-2018-10562 and CVE-2014-8361.Mirai malware that turns networked devices into remotely controlled bots has relaunched itself as Mukashi malware and has been actively exploiting Zyxel network-attached storage (NAS) devices’ vulnerability reported under CVE-2020-9054. As soon as the proof-of-concept (PoC) for CVE-2020-9054 was made publicly available last month, this vulnerability was promptly abused to infect vulnerable versions of Zyxel network-attached storage (NAS) devices with a new Mirai variant – Mukashi.In February, Zyxel released security patches to address the CVE-2020-9054 critical remote code execution vulnerability by Mukashi that affects several NAS devices.The objective was to see how many IP addresses that are still vulnerable to CVE-2017-7577 have already been exploited by the Mirai botnet. On 12 December 2017 researchers identified a variant of Mirai exploiting a zero-day flaw in Huawei HG532 routers to accelerate Mirai botnets infection, implementing two known SOAP related exploits on routers web interface, CVE-2014–8361 and CVE-2017–17215.The C2 servers for Emotet can receive these communications on port 80, which is the default port for HTTP, but may also receive them on port 443, which is the default for HTTPS traffic, or on a number of other nonstandard ports, including but not limited to 7080, 8080, 8090, 50000, or several others.After initial installation, the C2 capabilities begin. Emotet connects to C2 servers on various ports including, but not limited to: 20, 80, 443, 7080, 8443, and 50000.The above example for Emotet demonstrates HTTP running on port 20 to one of those hard-coded IP addresses. If the connection is successful, Emotet sleeps for 14 seconds before sending an HTTP POST to its Command and Control (C2) server on port 8080.Although the Emotet connection to the server uses port 443, which is normally used for Transport Layer Security (TLS) encrypted communications, the connection is unencrypted HTTP. Emotet has used ports 20, 22, 80, 443, 8080, and 8443.In some of the controller IPs, we observed HTTP traffic being sent over port 443.The initial executable by Emotet appears to launch an application application lpiograd.exe, seen in Figure 2 and then looks to make outbound network connections on port 80, to a single command and control (CnC) server.Based on our visibility over the last 30 days, 14 Emotet IPs communicated with 5.45.65[.]126 on port 80/TCP.Traffic observed to 212.8.242[.]201 was similar, with 23 Emotet IPs communicating on port 80/TCP. Once installed, the Emotet connects with the C2 server of hackers using specific ports that include 20, 80, 443, 7080, 8443, and 50000.After gaining the persistency and enumerating the compromised host the next stage of Emotet is to connect to a new IP address on port 80.On port 80 Emotet is running a standard Plesk HTTPd, which suggests the server is again a web server, but this time it doesn’t appear to be running any websites. In the Emotet config the port specified is 8080.The port used by the Emotet loader is hardcoded into it – 8080.Emotet has used ports 20, 22, 80, 443, 8080, and 8443.The dissection of this suspicious file, known by Symantec as Trojan.Emotet, shows common elements such as: TCP communication over ports 80, 8080, 22,990.Emotet connects to C2 servers on various ports including, but not limited to: 20, 80, 443, 7080, 8443, and 50000. We can see that port 80 returns the same universal 404 error as the hacked server did on the Emotet port, so most likely this is the port it forwards traffic to.The C2 servers can receive these communications on port 80, which is the default port for HTTP, but may also receive them on port 443, which is the default for HTTPS traffic, or on a number of other nonstandard ports, including but not limited to 7080, 8080, 8090, 50000, or several others. The initial executable appears to launch an application application lpiograd.exe, seen in Figure 2 and then looks to make outbound network connections on port 80, to a single command and control (CnC) serverEmotet Trojan used commonly used port for communication (e.g TCP port 80, 8080, 443, 8443, 7080, 20, 22, 53)***5.101.138.188 port 80 - sloegincottage.co.uk - GET /tyoinvur/En_us/Clients/092018/***108.167.161.63 port 80 - louisianaplating.com - GET /18Ge0wDF***50.62.194.30 port 80 - c-t.com.au - GET /PspAMbuSd2***37.120.175.15 port 80 - Attempted TCP connections, no response from the serverBased on our visibility over the last 30 days, 14 IPs communicated on port 80/TCP, 13 of which were validated Tier 1 C2s. Traffic observed to 212.8.242[.]201 was similar, with 23 IPs communicating on port 80/TCP, 22 of which were validated Tier 1 C2s.One technique is by simply swapping a .doc file with a .docx, which can make static detection of maldocs more difficult due to the compression native in the .docx format. While the attached documents all have a .doc extension, they are in fact .dotm, .docx, and other document file types, which enables them to successfully hide the embedded objects as ActiveX objects rather than typical “Form” objects whose metadata can be easily accessed in an opened document.[F00000000][T01D19C127D907AA0][O00000000]*%USERPROFILE%\\Desktop\\New Microsoft Word Document.docx. However, the document in this case is not the usual .doc or .docx but rather an XML file masquerading as a .doc, and the macro in this instance makes use of the Shapes feature,Cybercriminals are attaching .pdf, .mp4, and .docx files to emails that purport to have information on how people can protect themselves from the virus, updates on its spread and even virus detection procedures. The Emotet malware will disguise itself as a website hyperlink or regular file attachment in an email (.doc, .docx, .PDF), that will include hidden code that enables cybercriminals to gain control of your computer and other devices, often leading to the deployment of ransomware.Known as Emotet, the trojan is attached under the guise of pdf, mp4 and docx files.Emotet is most commonly spread via malicious emails containing Microsoft Office attachments, usually Microsoft Word (.doc, .docx) documents.Microsoft will also force a different file extension (.docm instead of .docx for new documents containing macros).It is most commonly spread via Microsoft Office attachments, usually Microsoft Word (.doc, .docx) documents.In HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.docx\\OpenWithProgidsAlso, security experts at Kaspersky identified this malware spreading in form of pdf, mp4 and Docx files.According to security firm Kaspersky, attackers are using several types of malicious files, including pdf, mp4 and docx with “coronavirus” theme to spread malware.The archive contains an exe-file with a long name (to hide the extension) and a PDF document icon.Once clicked on, the link will download a malicious pdf file containing the trojan.Emotet disguises itself as different pdf files in email attachments to bait users into clicking it.Such emails usually lead unsuspecting users to download the file attachments that can come in the form of .pdf, .mp4, and .docx. Cylance has seen PDFs, XML Documents, and .js files all used in malicious Emotet spam.In particular, the registry key HKLM\\Software\\Clients\\Mail\\Microsoft Outlook is accessed, and the value DllPathEx—the path to the mapi32.dll module—is expected to be defined.Old Emotet malware checks the configuration module of the email client especially the registry key HKLM\\Software\\Clients\\Mail\\Microsoft Outlookto exfiltrate the Email data.The first step to check if it is infected is to look at the configuration - the path to the DllPathEx-mapi32.dll module, especially the HKLM\\Software\\Clients\\Mail\\Microsoft Outlook access registry key. When this module is executed, it checks for the presence of registry key HKLM\\Software\\Clients\\Mail\\MicrosoftOutlook and then checks value of DLLPathEx i.e. the path to the mapi32.dll module. Provides information about used mail client (read from “HKLM\\Software\\Clients\\Mail” registry key value) and if it’s Microsoft Outlook and it’s MAPI DLL is 64-bit, name is followed by ” x64″ suffix.Emotet's module when executed checks for the presence registry key HKLM\\Software\\Clients\\Mail\\Microsoft Outlook and accesses, expecting the DllPathEx value to be defined.Emotet typically creates a registry run key to ensure it gets executed at startup: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\[random name of Emotet executable]If Emotet has admin privileges and has created a service, it creates the following registry subkey: HKLM\\SYSTEM\\ControlSet001\\services\\[name of Emotet exe mimicking a service]Typical registry keys for Emotet includes HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run and HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunSome Emotet registry keys examples are HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services {Random Hexadecimal Numbers} and HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run {Random Names} with value c:\\users\\admin\\appdata\\roaming\\{Random}{Legitimate Filename}.exeThis is read from “HKLM\\Software\\Clients\\Mail” registry key value which is by Emotet.There are also signs of the payload attempting to access the \"HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\IntelliForms\\Storage2\" key. For persistence, it creates the following registry keys: HKLM\\SYSTEM\\CurrentControlSet\\services\\dcomevent and HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunThe Emotet dropper can be stopped by blocking read access to the registry keys HKEY_CLASSES_ROOT\\Interface\\{AA5B6A80-B834-11D0-932F-00A0C90DCAA9} and HKEY_CLASSES_ROOT\\Wow6432Node\\Interface\\{AA5B6A80-B834-11D0-932F-00A0C90DCAA9}Trojan:Win32/Emotet.Bwill often modify the following subkey in order to accomplish this: HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunContained within the body of one of the Emotet emails is a zip file attachment that contains an infected Word document (SHA-256: c58f07f84d6aae485416683e5515b39bc39349e69bc14629440e693da23d6c4d) with a malicious macro that calls PowerShell. Another recently discovered Emotet file (SHA256: 9A0A40DAD123B16C404EB3B786E72AC8F3A4EBAF9E8A14682977C69FFF4F379E) exhibits similar behavior, and has a similarly recent compilation timestamp of Fri Oct 04 18:21:32 2019 GMT, which is only an hour after the first Emotet file described above was compiled.Finally, we also observed the following Emotet campaign downloading Trickbot: [SHA256: 7c06d1f53ccc14d4548b595f7c9afddf07be9c7a799e7a55a671cdf95e27bdca].In this blog, all analysis is based on the payload p4xl0bbb85.exe (sha256:21145645cac74e0b590813eafd257a2c4af6c6be0bc86d873ad0e6c005c0911d).Word document from links in Emotet spam emails: SHA256 hash:  6cad070bd1a37291b207895bbb51b975fa07b4ad2f05fb9a1ee15fb7441d600eIndicator of comprise of Emotet includes file hash a33353b8af41a2c8c526cf73db3a091e48056c4b5e4e0c1ec13f416bde627754.The file downloaded – pg89l1zxaxd6qbmjb4l9h924loun_n1ghb5at-06078805319 (Hash: fd8c3fcf8ca04ddd17f6fb7f7a6463912e6f33bfaf27e765188887fde52686f0) is identified by Blue Hexagon as Emotet.The second-stage payload that is downloaded from http://www.soprettyhairllc.com/welcome2/ircYdjewPt/ is named 249.exe (Hash: 9352f33597815aed4ff9832521e28d736b5b90516509c597d3ea6eff06baf522) on the victim’s computer. This payload is caught by Blue Hexagon’s Deep Learning model and identified as Emotet. The hash for the Emotet file B84C9E955190059BE0E3E4E550F85FC8 was compared. A few examples of file hashes by Emotet: 0299861a3cdc50a555b8d327b8cdbe9ebb3d286bd67d34fd78e82910ba0a69da, 02e0225c00b4f47728a493dbad00964ff4e2f975312d2fdccb5fee836b8e02a7Upon initial execution, the Emotet executable makes a copy of itself in a standard Windows location, and creates a mutex that starts with the letter M and is followed by a string hash value (e.g. 2bba8cd20d2a52dea643eed5596c6332678f9e496f0f77bf2f8851a2b505a4df)One example file from the infected Windows host: SHA256 hash: 34d2b83245696fa1dd24ef9ed4b33ef9172e9f6e274928628bd24c1de0763b47We received a malicious attachment and email spreading inside the network. The first emotet file hash is D23F8BA9167C606BDB462FF61A155D14.The second stage hash is the following D0E3A9710E46681BAC86700C4CCA2C51 and is recognized by some antivirus.For the purpose of our analysis, we’re taking a look at this Emotet sample: MD5: e8e468710c0a4f0906305c435a761902, SHA-256: 707fedfeadbfa4248cfc6711b5a0b98e1684cd37a6e0544e9b7bde4b86096963While the previous module only queried for the email’s sender name, destination name and email, the new module by Emotet (6cd44f2d00b43d80c08922d99d51cce804a59a54) is more thorough.The following table are a list of the MD5's associated with the Emotet dropper: 0004f198f2ab7102ceed5703821b5f7a, 001d9c6c36b6761bd07167caeb0fd092, 00396c27ff774453f32858f16910b498, 0180877094786c8a5ecf8c9c3c94b688Indicators of Compromise: SHA256 (in4684.exe) Win32.Trojan.Emotet, d2f7affdd9a9c6fd06911934ae409a2922e02619233305b074224f6f08229f39","entities":[[281,284,"file type"],[310,325,"file type"],[744,770,"file type"],[1336,1360,"file type"],[1362,1366,"file type"],[1690,1695,"file type"],[1577,1585,"file type"],[2410,2430,"file type"],[2411,2414,"file type"],[2410,2420,"file type"],[1363,1366,"file type"],[1336,1348,"file type"],[752,754,"file type"],[310,320,"file type"],[281,292,"file type"],[2833,2847,"file type"],[281,284,"file type"],[2980,2984,"file type"],[2833,2847,"file type"],[310,320,"file type"],[3208,3217,"file type"],[2980,2984,"file type"],[3336,3352,"file type"],[3336,3346,"file type"],[3245,3271,"file type"],[3273,3276,"file type"],[3499,3507,"file type"],[3499,3502,"file type"],[3499,3502,"file type"],[3499,3507,"file type"],[3499,3502,"file type"],[3645,3649,"file type"],[3788,3802,"file type"],[3788,3791,"file type"],[3893,3907,"file type"],[1363,1366,"file type"],[4053,4063,"file type"],[4579,4583,"file type"],[4579,4595,"file type"],[3499,3507,"file type"],[3499,3502,"file type"],[4961,4964,"file type"],[4968,4971,"file type"],[281,284,"file type"],[4925,4934,"file type"],[5196,5206,"file type"],[5367,5387,"file type"],[752,754,"file type"],[5460,5467,"port"],[5644,5652,"port"],[5603,5610,"port"],[5603,5610,"port"],[6193,6202,"port"],[6459,6469,"port"],[6474,6478,"port"],[6367,6376,"port"],[6703,6711,"port"],[5603,5610,"port"],[6880,6887,"file type"],[5603,5610,"port"],[6959,6968,"port"],[6193,6202,"port"],[5603,5610,"port"],[7386,7395,"port"],[5603,5610,"port"],[6193,6202,"port"],[2411,2414,"file type"],[5314,5326,"file type"],[3336,3346,"file type"],[15811,15830,"file type"],[2411,2414,"file type"],[15822,15830,"file type"],[281,285,"file type"],[4925,4933,"file type"],[15822,15830,"file type"],[2411,2414,"file type"],[2411,2414,"file type"],[244,248,"file type"],[16254,16261,"file type"],[16254,16266,"file type"],[15761,15765,"file type"],[16254,16261,"file type"],[16254,16266,"file type"],[15761,15770,"file type"],[2411,2414,"file type"],[281,292,"file type"],[281,284,"file type"],[17552,17556,"file type"],[3645,3649,"file type"],[17537,17552,"file type"],[17537,17556,"file type"],[3499,3502,"file type"],[18453,18465,"file type"],[244,248,"file type"],[20236,20246,"port"],[20236,20246,"port"],[20457,20462,"port"],[20442,20462,"port"],[20236,20246,"port"],[20510,20516,"port"],[20442,20462,"port"],[20236,20246,"port"],[20442,20462,"port"],[20457,20462,"port"],[20236,20246,"port"],[20442,20462,"port"],[20457,20462,"port"],[20236,20246,"port"],[20241,20246,"port"],[20241,20246,"port"],[20457,20462,"port"],[20442,20462,"port"],[20236,20246,"port"],[20457,20462,"port"],[20236,20246,"port"],[20236,20246,"port"],[21400,21410,"port"],[21501,21508,"port"],[21512,21516,"port"],[21501,21516,"port"],[18493,18495,"port"],[21694,21704,"port"],[21709,21713,"port"],[21694,21713,"port"],[21700,21704,"port"],[20236,20246,"port"],[21731,21741,"port"],[21865,21872,"port"],[21400,21410,"port"],[22047,22056,"port"],[22047,22056,"port"],[22047,22056,"port"],[22454,22463,"port"],[22546,22555,"port"],[21501,21508,"port"],[22849,22857,"port"],[21512,21516,"port"],[22849,22866,"port"],[18493,18495,"port"],[21501,21508,"port"],[22546,22555,"port"],[23256,23267,"port"],[20457,20462,"port"],[23256,23277,"port"],[20241,20246,"port"],[23256,23267,"port"],[20457,20462,"port"],[23256,23277,"port"],[21400,21410,"port"],[21694,21704,"port"],[21709,21713,"port"],[22454,22463,"port"],[23986,23993,"port"],[22546,22555,"port"],[22454,22463,"port"],[21501,21508,"port"],[24394,24404,"port"],[21700,21705,"port"],[24394,24413,"port"],[21512,21516,"port"],[21501,21508,"port"],[24663,24673,"port"],[24781,24791,"port"],[24793,24797,"port"],[5608,5610,"port"],[21870,21873,"port"],[24781,24808,"port"],[6703,6711,"port"],[5603,5610,"port"],[4213,4215,"port"],[5608,5610,"port"],[6708,6711,"port"],[30152,30156,"port"],[24793,24797,"port"],[30170,30175,"port"],[30328,30362,"port"],[30602,30611,"port"],[30420,30428,"port"],[30808,30816,"port"],[7391,7393,"port"],[5608,5610,"port"],[6708,6711,"port"],[24787,24791,"port"],[24793,24797,"port"],[30808,30845,"port"],[5603,5610,"port"],[6703,6711,"port"],[6703,6711,"port"],[5603,5610,"port"],[5603,5610,"port"],[4213,4215,"port"],[5608,5610,"port"],[6708,6711,"port"],[30152,30156,"port"],[24793,24797,"port"],[30170,30175,"port"],[30328,30362,"port"],[5603,5610,"port"],[5603,5610,"port"],[24787,24791,"port"],[24787,24791,"port"],[30808,30816,"port"],[7391,7393,"port"],[5608,5610,"port"],[6708,6711,"port"],[24787,24791,"port"],[24793,24797,"port"],[30808,30845,"port"],[24781,24789,"port"],[24787,24791,"port"],[32080,32094,"port"],[4213,4215,"port"],[5608,5610,"port"],[6708,6711,"port"],[30152,30156,"port"],[24793,24797,"port"],[30170,30175,"port"],[30328,30362,"port"],[5603,5610,"port"],[5603,5610,"port"],[6703,6711,"port"],[30152,30156,"port"],[24787,24791,"port"],[30164,30168,"port"],[30170,30175,"port"],[31005,31017,"file type"],[16670,16675,"file type"],[5603,5610,"port"],[5603,5610,"port"],[24787,24791,"port"],[6708,6711,"port"],[24793,24797,"port"],[30152,30156,"port"],[4213,4215,"port"],[7391,7393,"port"],[9288,9290,"port"],[32941,32983,"port"],[5603,5610,"port"],[5603,5610,"port"],[5602,5610,"port"],[5603,5610,"port"],[33573,33579,"file type"],[33557,33561,"file type"],[33557,33566,"file type"],[33574,33579,"file type"],[33557,33561,"file type"],[33763,33768,"file type"],[33574,33579,"file type"],[33574,33579,"file type"],[33575,33579,"file type"],[33557,33561,"file type"],[1853,1856,"file type"],[33557,33561,"file type"],[34285,34290,"file type"],[34292,34296,"file type"],[33676,33682,"file type"],[34302,34313,"file type"],[33557,33561,"file type"],[33574,33579,"file type"],[34585,34589,"file type"],[3646,3649,"file type"],[34293,34296,"file type"],[33575,33579,"file type"],[34303,34313,"file type"],[33557,33561,"file type"],[33573,33579,"file type"],[35025,35031,"file type"],[33574,33579,"file type"],[1853,1856,"file type"],[33557,33561,"file type"],[33575,33579,"file type"],[33573,33579,"file type"],[3646,3649,"file type"],[34293,34296,"file type"],[35389,35393,"file type"],[35389,35399,"file type"],[245,248,"file type"],[35587,35595,"file type"],[3499,3502,"file type"],[3646,3649,"file type"],[34293,34296,"file type"],[33575,33579,"file type"],[3646,3649,"file type"],[35781,35790,"file type"],[36014,36017,"file type"],[3645,3649,"file type"],[34291,34296,"file type"],[33574,33579,"file type"],[35989,35993,"file type"],[34161,34164,"file type"],[35995,36008,"file type"],[41888,41898,"file type"],[244,248,"file type"]]}]